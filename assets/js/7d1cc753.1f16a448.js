(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{100:function(e,n,t){"use strict";t.d(n,"a",(function(){return w})),t.d(n,"b",(function(){return p}));var i=t(0),r=t.n(i);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=r.a.createContext({}),b=function(e){var n=r.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},w=function(e){var n=b(e.components);return r.a.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},s=r.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),w=b(t),s=i,p=w["".concat(o,".").concat(s)]||w[s]||u[s]||a;return t?r.a.createElement(p,l(l({ref:n},d),{},{components:t})):r.a.createElement(p,l({ref:n},d))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=s;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var d=2;d<a;d++)o[d]=t[d];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},82:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return b}));var i=t(3),r=t(8),a=(t(0),t(100)),o={title:"Neutralino.window"},l={unversionedId:"api/window",id:"api/window",isDocsHomePage:!1,title:"Neutralino.window",description:"Neutralino.window namespace contains methods related to the current native window instance. This namespace's methods will work only for",source:"@site/docs/api/window.md",slug:"/api/window",permalink:"/docs/api/window",editUrl:"https://github.com/neutralinojs/neutralinojs.github.io/edit/main/docs/api/window.md",version:"current",sidebar:"docs",previous:{title:"Neutralino.app",permalink:"/docs/api/app"},next:{title:"Neutralino.filesystem",permalink:"/docs/api/filesystem"}},c=[{value:"window.setTitle(title)",id:"windowsettitletitle",children:[{value:"Parameters",id:"parameters",children:[]}]},{value:"window.minimize()",id:"windowminimize",children:[]},{value:"window.maximize()",id:"windowmaximize",children:[]},{value:"window.unmaximize()",id:"windowunmaximize",children:[]},{value:"window.isMaximized()",id:"windowismaximized",children:[{value:"Return object (awaited):",id:"return-object-awaited",children:[]}]},{value:"window.setFullScreen()",id:"windowsetfullscreen",children:[]},{value:"window.exitFullScreen()",id:"windowexitfullscreen",children:[]},{value:"window.isFullScreen()",id:"windowisfullscreen",children:[{value:"Return object (awaited):",id:"return-object-awaited-1",children:[]}]},{value:"window.show()",id:"windowshow",children:[]},{value:"window.hide()",id:"windowhide",children:[]},{value:"window.isVisible()",id:"windowisvisible",children:[{value:"Return object (awaited):",id:"return-object-awaited-2",children:[]}]},{value:"window.focus()",id:"windowfocus",children:[]},{value:"window.move(x, y)",id:"windowmovex-y",children:[{value:"Parameters",id:"parameters-1",children:[]}]},{value:"window.setIcon(icon)",id:"windowseticonicon",children:[{value:"Parameters",id:"parameters-2",children:[]}]}],d={toc:c};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Neutralino.window")," namespace contains methods related to the current native window instance. This namespace's methods will work only for\nthe ",Object(a.b)("a",{parentName:"p",href:"/docs/configuration/modes#window"},Object(a.b)("inlineCode",{parentName:"a"},"window"))," mode."),Object(a.b)("h2",{id:"windowsettitletitle"},"window.setTitle(title)"),Object(a.b)("p",null,"Sets the title of the native window. "),Object(a.b)("h3",{id:"parameters"},"Parameters"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"title"),": Title of the window as a string.")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"await Neutralino.window.setTitle('New title');\n")),Object(a.b)("h2",{id:"windowminimize"},"window.minimize()"),Object(a.b)("p",null,"Minimizes the native window."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"await Neutralino.window.minimize();\n")),Object(a.b)("h2",{id:"windowmaximize"},"window.maximize()"),Object(a.b)("p",null,"Maximizes the native window."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"await Neutralino.window.maximize();\n")),Object(a.b)("h2",{id:"windowunmaximize"},"window.unmaximize()"),Object(a.b)("p",null,"Restores the native window."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"await Neutralino.window.unmaximize();\n")),Object(a.b)("h2",{id:"windowismaximized"},"window.isMaximized()"),Object(a.b)("p",null,"Returns ",Object(a.b)("inlineCode",{parentName:"p"},"true")," if the native window is maximized."),Object(a.b)("h3",{id:"return-object-awaited"},"Return object (awaited):"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": ",Object(a.b)("inlineCode",{parentName:"li"},"true")," or ",Object(a.b)("inlineCode",{parentName:"li"},"false")," based on current maximized status.")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"let status = await Neutralino.window.isMaximized();\n")),Object(a.b)("h2",{id:"windowsetfullscreen"},"window.setFullScreen()"),Object(a.b)("p",null,"Enables the full screen mode."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"await Neutralino.window.setFullScreen();\n")),Object(a.b)("h2",{id:"windowexitfullscreen"},"window.exitFullScreen()"),Object(a.b)("p",null,"Exits from the full screen mode."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"await Neutralino.window.exitFullScreen();\n")),Object(a.b)("h2",{id:"windowisfullscreen"},"window.isFullScreen()"),Object(a.b)("p",null,"Returns ",Object(a.b)("inlineCode",{parentName:"p"},"true")," if the native window is in the full screen mode."),Object(a.b)("h3",{id:"return-object-awaited-1"},"Return object (awaited):"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": ",Object(a.b)("inlineCode",{parentName:"li"},"true")," or ",Object(a.b)("inlineCode",{parentName:"li"},"false")," based on current full screen status.")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"let status = await Neutralino.window.isFullScreen();\n")),Object(a.b)("h2",{id:"windowshow"},"window.show()"),Object(a.b)("p",null,"Shows the native window."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"await Neutralino.window.show();\n")),Object(a.b)("h2",{id:"windowhide"},"window.hide()"),Object(a.b)("p",null,"Hides the native window."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"await Neutralino.window.hide();\n")),Object(a.b)("h2",{id:"windowisvisible"},"window.isVisible()"),Object(a.b)("p",null,"Returns ",Object(a.b)("inlineCode",{parentName:"p"},"true")," if the native window is visible."),Object(a.b)("h3",{id:"return-object-awaited-2"},"Return object (awaited):"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": ",Object(a.b)("inlineCode",{parentName:"li"},"true")," or ",Object(a.b)("inlineCode",{parentName:"li"},"false")," based on current visibility status.")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"let status = await Neutralino.window.isVisible();\n")),Object(a.b)("h2",{id:"windowfocus"},"window.focus()"),Object(a.b)("p",null,"Focuses the native window."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"await Neutralino.window.focus();\n")),Object(a.b)("h2",{id:"windowmovex-y"},"window.move(x, y)"),Object(a.b)("p",null,"Moves the native window into given coordinates. Neutralinojs's cross-platform coordinate system starts from top-left corner of the screen.\nIn other words, ",Object(a.b)("inlineCode",{parentName:"p"},"x=0,y=0")," point refers to the top-left corner of the device's main screen. "),Object(a.b)("h3",{id:"parameters-1"},"Parameters"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"x"),": A integer value for the horizontal position."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"y"),": A integer value for the vertical position.")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"await Neutralino.window.move(200, 400);\n")),Object(a.b)("h2",{id:"windowseticonicon"},"window.setIcon(icon)"),Object(a.b)("p",null,"Sets an icon for the native window or Dock.\xa0"),Object(a.b)("h3",{id:"parameters-2"},"Parameters"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"icon"),": Path of the icon. A ",Object(a.b)("inlineCode",{parentName:"li"},"200x200")," PNG image file works fine on all supported operating systems.")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"const icon = '/resources/icons/appIcon.png';\nawait Neutralino.window.setIcon(icon);\n")))}b.isMDXComponent=!0}}]);